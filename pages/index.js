import React from "react";
import Head from "next/head";
import style from "@/styles/pages/homeStyle.module.scss";
import Link from "next/link";
import Navbar from "@/components/organisms/navbar";
import CardProductContent from "@/components/molecules/cardContent";
import Footer from "@/components/organisms/footer";
import axios from "axios";
import { useRouter } from "next/router";
import CardCategory from "@/components/molecules/cardCategory";
//REDUX
import * as productRedux from "@/store/reducer/product";
import { useDispatch } from "react-redux";
//MUI
import {
  Avatar,
  AppBar,
  Box,
  Toolbar,
  IconButton,
  Typography,
  InputBase,
  Badge,
  MenuItem,
  Menu,
  Card,
  CardContent,
  CardMedia,
  Modal,
  Button,
  TextField,
  Grid,
  Breadcrumbs,
  CircularProgress,
  CardActionArea,
  Rating,
  Pagination,
} from "@mui/material";
const Home = (props) => {
  const [getNewProduct, setGetNewProduct] = React.useState([]);
  const [totalPageNewProduct, setTotalPageNewProduct] = React.useState(1);
  const [isLoadingNewProduct, setIsLoadingNewProduct] = React.useState(true);

  const [getPopularProduct, setGetPopularProduct] = React.useState([]);
  const [totalPagePopularProduct, setTotalPagePopularProduct] =
    React.useState(1);
  const [isLoadingPopularProduct, setIsLoadingPopularProduct] =
    React.useState(true);

  React.useEffect(() => {
    sessionStorage.removeItem("categoriesData");

    setGetNewProduct(props.newProduct);
    setTotalPageNewProduct(parseInt(Math.ceil(props.newProduct?.total / 3)));
    setIsLoadingNewProduct(false);

    setGetPopularProduct(props.popularProduct);
    setTotalPagePopularProduct(
      parseInt(Math.ceil(props.popularProduct?.total / 3))
    );
    setIsLoadingPopularProduct(false);
  }, []);

  const newProductPagination = (pageParam) => {
    const offset = (pageParam - 1) * 3;

    setIsLoadingNewProduct(true);
    setGetNewProduct([]);

    axios
      .get(
        `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=${pageParam}&limit=3&sort=DESC&offset=${offset}`
      )
      .then(({ data }) => {
        setGetNewProduct(data);
        setTotalPageNewProduct(parseInt(Math.ceil(data?.total / 3)));
        setIsLoadingNewProduct(false);
      })
      .catch((err) => {
        setIsLoadingNewProduct(false);
        setGetNewProduct([]);

        console.log(err);
      })
      .finally(() => setIsLoadingNewProduct(false));
  };

  const popularProductPagination = (pageParam) => {
    const offset = (pageParam - 1) * 3;

    setIsLoadingPopularProduct(true);
    setGetPopularProduct([]);

    axios
      .get(
        `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=${pageParam}&limit=3&sort=DESC&offset=${offset}&orderBy=popular`
      )
      .then(({ data }) => {
        setGetPopularProduct(data);
        setTotalPagePopularProduct(parseInt(Math.ceil(data?.total / 3)));
        setIsLoadingPopularProduct(false);
      })
      .catch((err) => {
        setIsLoadingPopularProduct(false);
        setGetPopularProduct([]);

        console.log(err);
      })
      .finally(() => setIsLoadingPopularProduct(false));
  };

  // const handleClickSlug = (slug) => {
  //   axios
  //     .get(`${process.env.NEXT_PUBLIC_BACKEND_URL}/products/${slug}`)
  //     .then(({ data }) => {
  //       console.log("response", data);
  //       // dispatch(
  //       //   productRedux.setData({
  //       //     data: data?.data[0],
  //       //   })
  //       // );
  //       sessionStorage.setItem("productSlug", JSON.stringify(data?.data[0]));
  //       // router.push(`/product/${slug}`);
  //     });
  // };

  return (
    <>
      <Head>
        <title>Home | Tuku</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <main>
        <Navbar />

        <Box flex={4} p={{ xs: 4, md: 8 }}>
          <Grid
            container
            spacing={1}
            sx={{
              // mt: 2,
              display: "flex",
              justifyContent: "center",
            }}>
            <Card
              onClick={() => (window.location.href = "/#newProduct")}
              sx={{
                marginTop: "50px",
                marginRight: "20px",
                position: "relative",
              }}>
              <CardActionArea>
                <CardMedia
                  component="img"
                  height="240"
                  image={`https://res.cloudinary.com/daouvimjz/image/upload/v1679813056/ecommerce/popular_fyrbod.jpg`}
                  sx={{
                    transition: "height 0.3s ease-in-out",
                    "&:hover": {
                      filter: "grayscale(50%)",
                      transitionDelay: "0.2s",
                    },
                    width: "85vh",
                  }}
                />
              </CardActionArea>
              <Typography
                gutterBottom
                variant="h5"
                component="div"
                sx={{
                  fontWeight: "bold",
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                  color: "white",
                  fontSize: "25px",
                }}>
                NEW PRODUCTS
              </Typography>
            </Card>

            <Card
              onClick={() => (window.location.href = "/#popularProduct")}
              sx={{
                marginTop: "50px",
                marginRight: "20px",
                position: "relative",
              }}>
              <CardActionArea>
                <CardMedia
                  component="img"
                  height="240"
                  image={`https://res.cloudinary.com/daouvimjz/image/upload/v1679813060/ecommerce/new_vq12hr.jpg`}
                  sx={{
                    transition: "height 0.3s ease-in-out",
                    "&:hover": {
                      filter: "grayscale(50%)",
                      transitionDelay: "0.2s",
                    },
                    width: "85vh",
                  }}
                />
              </CardActionArea>
              <Typography
                gutterBottom
                variant="h5"
                component="div"
                sx={{
                  fontWeight: "bold",
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                  color: "white",
                  fontSize: "25px",
                }}>
                POPULAR PRODUCTS
              </Typography>
            </Card>
          </Grid>
          <div
            style={{
              display: "flex",
              // justifyContent: "center",
              // alignItems: "center",
              marginTop: "80px",
              // marginBottom: "40px",
              flexDirection: "column",
            }}>
            <Typography
              variant="h5"
              component="div"
              sx={{
                fontWeight: "bold",
                marginBottom: "-30px",
                display: "flex",
                justifyContent: "flex-start",
              }}>
              CATEGORY
            </Typography>
            <CardCategory />
          </div>

          <div
            style={{
              display: "flex",
              marginTop: "80px",
              flexDirection: "column",
            }}>
            <Typography
              variant="h5"
              component="div"
              sx={{
                fontWeight: "bold",
                marginBottom: "-30px",
                display: "flex",
                justifyContent: "flex-start",
              }}>
              NEW
            </Typography>

            <Grid
              id="newProduct"
              container
              spacing={1}
              sx={{
                mt: 2,
                display: "flex",
                justifyContent: "center",
              }}>
              {/* LOOP THE CONTENT */}
              {isLoadingNewProduct ? (
                <div
                  style={{
                    display: "flex",
                    justifyContent: "center",
                    marginTop: "300px",
                    height: "270px",
                  }}>
                  <CircularProgress />
                </div>
              ) : (
                <>
                  {getNewProduct?.data?.map((product, index) => (
                    <CardProductContent key={index} data={product} />
                  ))}
                </>
              )}
            </Grid>

            <Pagination
              count={totalPageNewProduct}
              sx={{
                display: "flex",
                justifyContent: "center",
                marginTop: "20px",
              }}
              onChange={(event, page) => newProductPagination(page)}
            />
          </div>

          <div
            style={{
              display: "flex",
              marginTop: "80px",
              flexDirection: "column",
            }}>
            <Typography
              variant="h5"
              component="div"
              sx={{
                fontWeight: "bold",
                marginBottom: "-30px",
                display: "flex",
                justifyContent: "flex-start",
              }}>
              POPULAR
            </Typography>

            <Grid
              id="popularProduct"
              container
              spacing={1}
              sx={{
                mt: 2,
                display: "flex",
                justifyContent: "center",
              }}>
              {/* LOOP THE CONTENT */}
              {isLoadingPopularProduct ? (
                <div
                  style={{
                    display: "flex",
                    justifyContent: "center",
                    marginTop: "300px",
                    height: "270px",
                  }}>
                  <CircularProgress />
                </div>
              ) : (
                <>
                  {getPopularProduct?.data?.map((product, index) => (
                    <CardProductContent key={index} data={product} />
                  ))}
                </>
              )}
            </Grid>

            <Pagination
              count={totalPagePopularProduct}
              sx={{
                display: "flex",
                justifyContent: "center",
                marginTop: "20px",
              }}
              onChange={(event, page) => popularProductPagination(page)}
            />
          </div>
        </Box>

        {/* FOOTER */}
        <Footer />
        {/* END OF FOOTER */}
      </main>
    </>
  );
};

export default Home;

export async function getServerSideProps(context) {
  const productNew = await axios.get(
    `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=1&limit=3&sort=DESC`
  );

  const productPopular = await axios.get(
    `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=1&limit=3&sort=DESC&orderBy=popular`
  );

  const convertProductNew = productNew.data;
  const convertProductPopular = productPopular.data;

  return {
    props: {
      newProduct: convertProductNew,
      popularProduct: convertProductPopular,
    }, // will be passed to the page component as props
  };
}
